# Wonderfully formatted data taken from:# https://raw.githubusercontent.com/samurailink3/hangouts-against-humanity/master/source/data/cards.js# Local version ("cards.json") is that exact file with the first 14 characters chopped off to make it valid JSON.# Also changed \' to just ' and a special \" to just \".import jsonimport randomfrom itertools import chainimport pyttsxfrom unidecode import unidecodetry:    from itertools import izip_longest as zip_longestexcept:    from itertools import zip_longestquestions = []responses = []engine = pyttsx.init()def read_cards(filename):    with open(filename) as f:        cards = json.load(f)                for card in cards:            card_type = card['cardType']            text = card['text']            if card_type == 'A':                responses.append(text)            else:                blanks = card['numAnswers']                questions.append((text, blanks))def get_message():    question, num_blanks = random.choice(questions)    blanks = random.sample(responses, num_blanks)    parts = question.split('_')    # Put semicolons in strange places to make a dramatic pause for blanks.    parts = [part + ':' for part in parts]    message = chain.from_iterable(zip_longest(parts, blanks, fillvalue=''))        # Do some unwrapping and cleanup.    message = [unidecode(unicode(part)) for part in message]    message = [part for part in message if part and part != '.:']    return messagedef speak(message):    engine.say(message)    engine.runAndWait()def main():    engine.setProperty('rate', 110)    read_cards("cards.json")    for i in range(5):        message = ' '.join(get_message())        print(message)        speak(message)if __name__ == '__main__':    main()